<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Archive on Dan Gillis</title><link>https://gilcrest.github.io/posts/archive/</link><description>Recent content in Archive on Dan Gillis</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 20 Feb 2018 07:10:00 -0400</lastBuildDate><atom:link href="https://gilcrest.github.io/posts/archive/index.xml" rel="self" type="application/rss+xml"/><item><title>HTTP Request/Response Logging with Go</title><link>https://gilcrest.github.io/posts/archive/go-http-request-response-logging/</link><pubDate>Tue, 20 Feb 2018 07:10:00 -0400</pubDate><guid>https://gilcrest.github.io/posts/archive/go-http-request-response-logging/</guid><description>I wrote a cool post on HTTP Request/Response Logging with Go and posted it to Medium, check it here
Thanks - sorry for the annoying redirect, I&amp;rsquo;ll probably move everything to medium at some point, but until then&amp;hellip;</description></item><item><title>Go API Template v0.0.2</title><link>https://gilcrest.github.io/posts/archive/go-api-template/</link><pubDate>Fri, 20 Oct 2017 07:10:00 -0400</pubDate><guid>https://gilcrest.github.io/posts/archive/go-api-template/</guid><description>Hello Gopher community! This represents my first code release, albeit a minor one. I&amp;rsquo;m hopeful that this will be helpful. I believe in templates and am trying to put together a working API template from all the best practices I&amp;rsquo;ve found in the Go community. There&amp;rsquo;s more details on the github readme here
Thanks!</description></item><item><title>And then there was Go...</title><link>https://gilcrest.github.io/posts/archive/go/</link><pubDate>Mon, 09 Jan 2017 02:45:00 -0400</pubDate><guid>https://gilcrest.github.io/posts/archive/go/</guid><description>Eureka! After many many brushes with many different languages over many many years, I think I finally found the language that is right for me - Go! It&amp;rsquo;s hard to say why really, but something about learning this language feels right - it&amp;rsquo;s well thought out, has a great community and is making programming fun again for me. It&amp;rsquo;s built in http libraries are incredible. I&amp;rsquo;m just beginning, but this could be my forever language :)</description></item><item><title>Setting up OS X El Capitan for node development with node-oracledb</title><link>https://gilcrest.github.io/posts/archive/osx-oracle-node-setup/</link><pubDate>Tue, 05 Apr 2016 15:42:00 -0400</pubDate><guid>https://gilcrest.github.io/posts/archive/osx-oracle-node-setup/</guid><description>After stumbling through the setup of Oracle (for use with node and node-oracledb) on my new and first ever Macbook, I thought I&amp;rsquo;d put together a one pager on setup for those who may have had similar struggles. I was able to find everything I needed through existing pages, but I bounced around a lot to several different sites to find all the information and it took me several attempts. I tried to cobble all the steps together in a fairly verbose way as I had to learn certain things along the way&amp;hellip;</description></item><item><title>Apex 5 - Minimize Left Sidebar Navigation by Default</title><link>https://gilcrest.github.io/posts/archive/apex-minimize/</link><pubDate>Thu, 15 Oct 2015 20:38:00 -0400</pubDate><guid>https://gilcrest.github.io/posts/archive/apex-minimize/</guid><description>You may find yourself in a situation where you proudly unveil your upgraded-to-Universal Theme app to your user-base after working on it for months with your beautiful wide screen monitor (page designer pretty much mandates this) and your user-base is not quite as happy as you thought they&amp;rsquo;d be as they don&amp;rsquo;t all have super wide screens and they, for some reason, have low-resolution monitors (like 1280 x 768 low). The users may think your super cool left sidebar navigation, which is maximized by default, is neat, but they&amp;rsquo;d actually prefer their space back&amp;hellip; If you should find yourself in this situation, there is an easy answer!</description></item><item><title>Raiser v0.5 - Committed to Github</title><link>https://gilcrest.github.io/posts/archive/raiser/</link><pubDate>Mon, 17 Aug 2015 12:39:00 -0400</pubDate><guid>https://gilcrest.github.io/posts/archive/raiser/</guid><description>I just released an early version of my &amp;ldquo;raiser&amp;rdquo; code for Oracle PL/SQL, leveraging OraOpenSource&amp;rsquo;s logger utility. I&amp;rsquo;d love to get anyone&amp;rsquo;s input and help with it. The Github project is https://github.com/gilcrest/raiser
As background, I&amp;rsquo;ve used the Quest Error Manager (QEM) in my codebase for years, but have recently switched primarily to using logger for most things. There are a few things that QEM does that logger does not&amp;hellip; In a highly distributed environment, you really need to be able to raise an exception to a user with a particular error message and unique identifier.</description></item><item><title>Name:Value Encryption Utility using PL/SQL</title><link>https://gilcrest.github.io/posts/archive/name-value-encryption/</link><pubDate>Wed, 17 Dec 2014 08:01:05 -0400</pubDate><guid>https://gilcrest.github.io/posts/archive/name-value-encryption/</guid><description>I recently ran into an issue where, as part of a webservice call I was making using the Oracle APEX_WEB_SERVICE API, I needed to pass the application id and password in the soap header, but I did not want those sensitive data elements to be exposed in my pl/sql code in cleartext. I decided I wanted to encrypt the data and retrieve it at run time as a function call. I tried to find a way to do this via Stack Overflow, Google, etc.</description></item></channel></rss>